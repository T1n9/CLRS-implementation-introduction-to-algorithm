some problems with structure of optimal subproblems could also be solved with greedy algorithms.

Greed algorithms solve problem from upside down. It should be executed as follows.

1. Cast the optimization problem as one in which we make a choice and are left
with one subproblem to solve.
2. Prove that there is always an optimal solution to the original problem that makes
the greedy choice, so that the greedy choice is always safe.
3. Demonstrate optimal substructure by showing that, having made the greedy
choice, what remains is a subproblem with the property that if we combine an
optimal solution to the subproblem with the greedy choice we have made, we
arrive at an optimal solution to the original problem

Case that can be solved by dynamic programming but not greedy algorithm: 0-1 knapsack problem.
